[
  {
    "attribute": "resource",
    "property": "resource",
    "description": "The resource to get from Microsoft Graph (for example, /me)."
  },
  {
    "attribute": "scopes",
    "property": "scopes",
    "description": "Optional array of strings if using the property or a comma delimited scope if using the attribute. The component will use these scopes (with a supported provider) to ensure that the user has consented to the right permission."
  },
  {
    "attribute": "version",
    "property": "version",
    "description": "Optional API version to use when making the GET request. Default is v1.0."
  },
  {
    "attribute": "max-pages",
    "property": "maxPages",
    "description": "Optional number of pages (for resources that support paging). Default is 3. Setting this value to 0 will get all pages."
  },
  {
    "attribute": "polling-rate",
    "property": "pollingRate",
    "description": "Optional number of milliseconds. When set, the component will poll the request URI for updates in the defined interval. If using a delta query, polling will always query the delta API. The template will only refresh when the data changes."
  },
  {
    "attribute": "cache-enabled",
    "property": "cacheEnabled",
    "description": "Optional Boolean. When set, it indicates that the response from the resource will be cached. Overriden if refresh() is called or if pollingRate is in use. Default is false."
  },
  {
    "attribute": "cache-invalidation-period",
    "property": "cacheInvalidationPeriod",
    "description": "Optional number of milliseconds. When set in combination with cacheEnabled, the delay before the cache reaches its invalidation period will be modified by this value. Default is 0 and will use the default invalidation period."
  },
  {
    "attribute": "type",
    "property": "type",
    "description": "Optional type of the expected response. Default is json. Supports json or image (only be supported on endpoints ending with /photo/value$)."
  }
]